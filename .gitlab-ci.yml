image: "golang:latest"

stages:
  - build
  - package
  - release

linux build:
  stage: build
  script:
    - go build -ldflags="-s -w" -o ./out/minepkg
  artifacts:
    paths:
      - out/minepkg

windows build:
  image: dockercore/golang-cross
  stage: build
  script:
    - echo "building for windows"
    - CC=x86_64-w64-mingw32-gcc-posix CXX=x86_64-w64-mingw32-g++-posix GOOS=windows GOARCH=amd64 CGO_ENABLED=1 go build -ldflags="-s -w" -o ./out/minepkg.exe
  artifacts:
    paths:
      - out/minepkg.exe

macos build:
  stage: build
  script:
    - echo "building for macOS"
    - GOOS=darwin GOARCH=amd64 go build -ldflags="-s -w" -o out/minepkg-macos
  artifacts:
    paths:
      - out/minepkg-macos

linux packages:
  stage: package
  image: "tenzer/fpm:no-entrypoint"
  only:
    - /^v\d+\.\d+\.\d+-?.*$/
  dependencies:
    - linux build
  variables:
    GIT_STRATEGY: none
  script:
    - mkdir -p ./source/usr/bin
    - cp out/minepkg ./source/usr/bin
    - fpm -s dir -C ./source -t deb -n minepkg -v $CI_COMMIT_REF_NAME .
    - fpm -s dir -C ./source -t rpm -n minepkg -v $CI_COMMIT_REF_NAME .
    - fpm -s dir -C ./source -t pacman -n minepkg -v $CI_COMMIT_REF_NAME .
  artifacts:
    paths:
      - '*.deb'
      - '*.rpm'
      - '*.pkg.tar.xz' # pacman

github release:
  stage: release
  only:
    - /^v\d+\.\d+\.\d+-?.*$/
  when: manual
  script:
    - go get github.com/aktau/github-release
    - github-release release --user fiws --repo minepkg --tag $CI_COMMIT_REF_NAME
    - github-release upload --user fiws --repo minepkg --tag $CI_COMMIT_REF_NAME --name "minepkg-linux-amd64" --file out/minepkg
    - github-release upload --user fiws --repo minepkg --tag $CI_COMMIT_REF_NAME --name "minepkg-macos-amd64" --file out/minepkg-macos
    - github-release upload --user fiws --repo minepkg --tag $CI_COMMIT_REF_NAME --name "minepkg-windows-amd64" --file out/minepkg.exe

gcs release:
  stage: release
  image: google/cloud-sdk:slim
  only:
    - /^v\d+\.\d+\.\d+-?.*$/
  script: |
    # auth
    gcloud config set project minepkg-io
    echo $GCP_DEV_SERVICEACCOUNT > ./gcp-secret.json
    gcloud auth activate-service-account --key-file gcp-secret.json
    # upload binaries to GCS
    VERSION=`echo $CI_COMMIT_REF_NAME | cut -c 2-`
    gsutil -m cp out/minepkg gs://minepkg-client/$VERSION/minepkg-linux-amd64
    gsutil -m cp out/minepkg-macos gs://minepkg-client/$VERSION/minepkg-macos-amd64.exe
    gsutil -m cp out/minepkg.exe gs://minepkg-client/$VERSION/minepkg-windows-amd64.exe
    # generate and upload latest version manifest
    echo -e '{
      "version": "'$VERSION'",
      "binaries": {
        "win": "https://storage.googleapis.com/minepkg-client/'$VERSION'/minepkg-windows-amd64.exe",
        "macos": "https://storage.googleapis.com/minepkg-client/'$VERSION'/minepkg-macos-amd64",
        "linux": "https://storage.googleapis.com/minepkg-client/'$VERSION'/minepkg-linux-amd64"
      }
    }' > latest-version.json
    gsutil -m cp latest-version.json gs://minepkg-client
