image: "golang:latest"

stages:
  - build
  - package
  - release

dev snapshot build:
  stage: build
  image: goreleaser/goreleaser
  script:
    - release --snapshot --skip-publish
  artifacts:
    paths:
      - dist

release build:
  stage: build
  image: goreleaser/goreleaser
  only:
    - /^v\d+\.\d+\.\d+-?.*$/
  script:
    - release --skip-publish
  artifacts:
    paths:
      - dist

linux packages:
  stage: package
  image: "tenzer/fpm:no-entrypoint"
  only:
    - /^v\d+\.\d+\.\d+-?.*$/
  dependencies:
    - release build
  variables:
    GIT_STRATEGY: none
  script:
    - mkdir -p ./source/usr/bin
    - cp dist/minepkg_linux_amd64/minepkg ./source/usr/bin
    - fpm -s dir -C ./source -t deb -n minepkg -v $CI_COMMIT_REF_NAME .
    - fpm -s dir -C ./source -t rpm -n minepkg -v $CI_COMMIT_REF_NAME .
    - fpm -s dir -C ./source -t pacman -n minepkg -v $CI_COMMIT_REF_NAME .
  artifacts:
    paths:
      - '*.deb'
      - '*.rpm'
      - '*.pkg.tar.xz' # pacman

gcs release:
  stage: release
  image: google/cloud-sdk:slim
  only:
    - /^v\d+\.\d+\.\d+-?.*$/
  script: |
    # auth
    gcloud config set project minepkg-io
    echo $GCP_DEV_SERVICEACCOUNT > ./gcp-secret.json
    gcloud auth activate-service-account --key-file gcp-secret.json
    # upload binaries to GCS
    VERSION=`echo $CI_COMMIT_REF_NAME | cut -c 2-`
    gsutil -m cp dist/minepkg_linux_amd64/minepkg gs://minepkg-client/$VERSION/minepkg-linux-amd64
    gsutil -m cp dist/minepkg_darwin_amd64/minepkg gs://minepkg-client/$VERSION/minepkg-macos-amd64
    gsutil -m cp dist/minepkg_windows_amd64/minepkg gs://minepkg-client/$VERSION/minepkg-windows-amd64.exe
    # copy binaries to static 'latest' directory
    gsutil -m cp gs://minepkg-client/$VERSION/* gs://minepkg-client/latest
    # generate and upload latest version manifest
    echo -e '{
      "version": "'$VERSION'",
      "binaries": {
        "win": "https://storage.googleapis.com/minepkg-client/'$VERSION'/minepkg-windows-amd64.exe",
        "macos": "https://storage.googleapis.com/minepkg-client/'$VERSION'/minepkg-macos-amd64",
        "linux": "https://storage.googleapis.com/minepkg-client/'$VERSION'/minepkg-linux-amd64"
      }
    }' > latest-version.json
    gsutil -m cp latest-version.json gs://minepkg-client

gcs dev release:
  stage: release
  image: google/cloud-sdk:slim
  only:
    - master
  script:
    # auth
    - gcloud config set project minepkg-io
    - echo $GCP_DEV_SERVICEACCOUNT > ./gcp-secret.json
    - gcloud auth activate-service-account --key-file gcp-secret.json
    # upload binary to GCS
    - gsutil -m cp dist/minepkg_linux_amd64/minepkg gs://minepkg-client/minepkg-dev-snapshot
